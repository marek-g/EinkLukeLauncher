var cordova=require("cordova"),nativeApiProvider=require("cordova/android/nativeapiprovider"),utils=require("cordova/utils"),base64=require("cordova/base64"),channel=require("cordova/channel"),jsToNativeModes={PROMPT:0,JS_OBJECT:1},nativeToJsModes={POLLING:0,LOAD_URL:1,ONLINE_EVENT:2,EVAL_BRIDGE:3},jsToNativeBridgeMode,nativeToJsBridgeMode=nativeToJsModes.EVAL_BRIDGE,pollEnabled=!1,bridgeSecret=-1,messagesFromNative=[],isProcessing=!1,resolvedPromise="undefined"==typeof Promise?null:Promise.resolve(),nextTick=resolvedPromise?function(fn){resolvedPromise.then(fn)}:function(fn){setTimeout(fn)};function androidExec(success,fail,service,action,args){if(bridgeSecret<0)throw new Error("exec() called without bridgeSecret");void 0===jsToNativeBridgeMode&&androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT),args=args||[];for(var i=0;i<args.length;i++)"ArrayBuffer"==utils.typeName(args[i])&&(args[i]=base64.fromArrayBuffer(args[i]));var callbackId=service+cordova.callbackId++,argsJson=JSON.stringify(args);(success||fail)&&(cordova.callbacks[callbackId]={success:success,fail:fail});var msgs=nativeApiProvider.get().exec(bridgeSecret,service,action,callbackId,argsJson);jsToNativeBridgeMode==jsToNativeModes.JS_OBJECT&&"@Null arguments."===msgs?(androidExec.setJsToNativeBridgeMode(jsToNativeModes.PROMPT),androidExec(success,fail,service,action,args),androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT)):msgs&&(messagesFromNative.push(msgs),nextTick(processMessages))}function pollOnceFromOnlineEvent(){pollOnce(!0)}function pollOnce(opt_fromOnlineEvent){if(!(bridgeSecret<0)){var msgs=nativeApiProvider.get().retrieveJsMessages(bridgeSecret,!!opt_fromOnlineEvent);msgs&&(messagesFromNative.push(msgs),processMessages())}}function pollingTimerFunc(){pollEnabled&&(pollOnce(),setTimeout(pollingTimerFunc,50))}function hookOnlineApis(){function proxyEvent(e){cordova.fireWindowEvent(e.type)}window.addEventListener("online",pollOnceFromOnlineEvent,!1),window.addEventListener("offline",pollOnceFromOnlineEvent,!1),cordova.addWindowEventHandler("online"),cordova.addWindowEventHandler("offline"),document.addEventListener("online",proxyEvent,!1),document.addEventListener("offline",proxyEvent,!1)}function buildPayload(payload,message){var payloadKind=message.charAt(0);if("s"==payloadKind)payload.push(message.slice(1));else if("t"==payloadKind)payload.push(!0);else if("f"==payloadKind)payload.push(!1);else if("N"==payloadKind)payload.push(null);else if("n"==payloadKind)payload.push(+message.slice(1));else if("A"==payloadKind){var data=message.slice(1);payload.push(base64.toArrayBuffer(data))}else if("S"==payloadKind)payload.push(window.atob(message.slice(1)));else if("M"==payloadKind)for(var multipartMessages=message.slice(1);""!==multipartMessages;){var spaceIdx=multipartMessages.indexOf(" "),msgLen=+multipartMessages.slice(0,spaceIdx),multipartMessage=multipartMessages.substr(spaceIdx+1,msgLen);multipartMessages=multipartMessages.slice(spaceIdx+msgLen+1),buildPayload(payload,multipartMessage)}else payload.push(JSON.parse(message))}function processMessage(message){var firstChar=message.charAt(0);if("J"==firstChar)eval(message.slice(1));else if("S"==firstChar||"F"==firstChar){var success="S"==firstChar,keepCallback="1"==message.charAt(1),spaceIdx=message.indexOf(" ",2),status=+message.slice(2,spaceIdx),nextSpaceIdx=message.indexOf(" ",spaceIdx+1),callbackId=message.slice(spaceIdx+1,nextSpaceIdx),payloadMessage=message.slice(nextSpaceIdx+1),payload=[];buildPayload(payload,payloadMessage),cordova.callbackFromNative(callbackId,success,status,payload,keepCallback)}}function processMessages(){if(!isProcessing&&0!==messagesFromNative.length){isProcessing=!0;try{var msg=popMessageFromQueue();if("*"==msg&&0===messagesFromNative.length)return void nextTick(pollOnce);processMessage(msg)}finally{isProcessing=!1,0<messagesFromNative.length&&nextTick(processMessages)}}}function popMessageFromQueue(){var messageBatch=messagesFromNative.shift();if("*"==messageBatch)return"*";var spaceIdx=messageBatch.indexOf(" "),msgLen=+messageBatch.slice(0,spaceIdx),message=messageBatch.substr(spaceIdx+1,msgLen);return(messageBatch=messageBatch.slice(spaceIdx+msgLen+1))&&messagesFromNative.unshift(messageBatch),message}androidExec.init=function(){bridgeSecret=+prompt("","gap_init:"+nativeToJsBridgeMode),channel.onNativeReady.fire()},hookOnlineApis(),androidExec.jsToNativeModes=jsToNativeModes,androidExec.nativeToJsModes=nativeToJsModes,androidExec.setJsToNativeBridgeMode=function(mode){mode!=jsToNativeModes.JS_OBJECT||window._cordovaNative||(mode=jsToNativeModes.PROMPT),nativeApiProvider.setPreferPrompt(mode==jsToNativeModes.PROMPT),jsToNativeBridgeMode=mode},androidExec.setNativeToJsBridgeMode=function(mode){mode!=nativeToJsBridgeMode&&(nativeToJsBridgeMode==nativeToJsModes.POLLING&&(pollEnabled=!1),nativeToJsBridgeMode=mode,0<=bridgeSecret&&nativeApiProvider.get().setNativeToJsBridgeMode(bridgeSecret,mode),mode==nativeToJsModes.POLLING&&(pollEnabled=!0,setTimeout(pollingTimerFunc,1)))},module.exports=androidExec;