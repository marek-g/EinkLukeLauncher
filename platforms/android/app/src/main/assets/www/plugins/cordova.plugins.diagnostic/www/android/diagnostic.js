cordova.define("cordova.plugins.diagnostic.Diagnostic",function(require,exports,module){module.exports=new function(){var Diagnostic={},requestInProgress=!1;function checkForInvalidPermissions(permissions,errorCallback){"object"!=typeof permissions&&(permissions=[permissions]);var valid=!0,invalidPermissions=[];return permissions.forEach(function(permission){Diagnostic.permission[permission]||invalidPermissions.push(permission)}),0<invalidPermissions.length&&(errorCallback("Invalid permissions specified: "+invalidPermissions.join(", ")),valid=!1),valid}return Diagnostic.runtimePermission=Diagnostic.permission={READ_CALENDAR:"READ_CALENDAR",WRITE_CALENDAR:"WRITE_CALENDAR",CAMERA:"CAMERA",READ_CONTACTS:"READ_CONTACTS",WRITE_CONTACTS:"WRITE_CONTACTS",GET_ACCOUNTS:"GET_ACCOUNTS",ACCESS_FINE_LOCATION:"ACCESS_FINE_LOCATION",ACCESS_COARSE_LOCATION:"ACCESS_COARSE_LOCATION",RECORD_AUDIO:"RECORD_AUDIO",READ_PHONE_STATE:"READ_PHONE_STATE",CALL_PHONE:"CALL_PHONE",ADD_VOICEMAIL:"ADD_VOICEMAIL",USE_SIP:"USE_SIP",PROCESS_OUTGOING_CALLS:"PROCESS_OUTGOING_CALLS",READ_CALL_LOG:"READ_CALL_LOG",WRITE_CALL_LOG:"WRITE_CALL_LOG",SEND_SMS:"SEND_SMS",RECEIVE_SMS:"RECEIVE_SMS",READ_SMS:"READ_SMS",RECEIVE_WAP_PUSH:"RECEIVE_WAP_PUSH",RECEIVE_MMS:"RECEIVE_MMS",WRITE_EXTERNAL_STORAGE:"WRITE_EXTERNAL_STORAGE",READ_EXTERNAL_STORAGE:"READ_EXTERNAL_STORAGE",BODY_SENSORS:"BODY_SENSORS"},Diagnostic.runtimePermissionGroups=Diagnostic.permissionGroups={CALENDAR:["READ_CALENDAR","WRITE_CALENDAR"],CAMERA:["CAMERA"],CONTACTS:["READ_CONTACTS","WRITE_CONTACTS","GET_ACCOUNTS"],LOCATION:["ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION"],MICROPHONE:["RECORD_AUDIO"],PHONE:["READ_PHONE_STATE","CALL_PHONE","ADD_VOICEMAIL","USE_SIP","PROCESS_OUTGOING_CALLS","READ_CALL_LOG","WRITE_CALL_LOG"],SENSORS:["BODY_SENSORS"],SMS:["SEND_SMS","RECEIVE_SMS","READ_SMS","RECEIVE_WAP_PUSH","RECEIVE_MMS"],STORAGE:["READ_EXTERNAL_STORAGE","WRITE_EXTERNAL_STORAGE"]},Diagnostic.runtimePermissionStatus=Diagnostic.permissionStatus={GRANTED:"GRANTED",DENIED_ONCE:"DENIED_ONCE",NOT_REQUESTED:"NOT_REQUESTED",DENIED_ALWAYS:"DENIED_ALWAYS"},Diagnostic.cpuArchitecture={UNKNOWN:"unknown",ARMv6:"ARMv6",ARMv7:"ARMv7",ARMv8:"ARMv8",X86:"X86",X86_64:"X86_64",MIPS:"MIPS",MIPS_64:"MIPS_64"},Diagnostic._onNFCStateChange=Diagnostic._onPermissionRequestComplete=function(){},Diagnostic._ensureBoolean=function(callback){return function(result){callback(!!result)}},Diagnostic.enableDebug=function(successCallback){return cordova.exec(successCallback,null,"Diagnostic","enableDebug",[])},Diagnostic.switchToSettings=function(successCallback,errorCallback){return cordova.exec(successCallback,errorCallback,"Diagnostic","switchToSettings",[])},Diagnostic.getPermissionAuthorizationStatus=function(successCallback,errorCallback,permission){if(checkForInvalidPermissions(permission,errorCallback))return cordova.exec(successCallback,errorCallback,"Diagnostic","getPermissionAuthorizationStatus",[permission])},Diagnostic.getPermissionsAuthorizationStatus=function(successCallback,errorCallback,permissions){if(checkForInvalidPermissions(permissions,errorCallback))return cordova.exec(successCallback,errorCallback,"Diagnostic","getPermissionsAuthorizationStatus",[permissions])},Diagnostic.requestRuntimePermission=function(successCallback,errorCallback,permission){if(checkForInvalidPermissions(permission,errorCallback))return requestInProgress?onError("A runtime permissions request is already in progress"):(requestInProgress=!0,cordova.exec(function(statuses){requestInProgress=!1,successCallback(statuses[permission]),Diagnostic._onPermissionRequestComplete(statuses)},onError,"Diagnostic","requestRuntimePermission",[permission]));function onError(error){requestInProgress=!1,errorCallback(error)}},Diagnostic.requestRuntimePermissions=function(successCallback,errorCallback,permissions){if(checkForInvalidPermissions(permissions,errorCallback))return requestInProgress?onError("A runtime permissions request is already in progress"):(requestInProgress=!0,cordova.exec(function(statuses){requestInProgress=!1,successCallback(statuses),Diagnostic._onPermissionRequestComplete(statuses)},onError,"Diagnostic","requestRuntimePermissions",[permissions]));function onError(error){requestInProgress=!1,errorCallback(error)}},Diagnostic.isRequestingPermission=function(){return requestInProgress},Diagnostic.registerPermissionRequestCompleteHandler=function(successCallback){Diagnostic._onPermissionRequestComplete=successCallback||function(){}},Diagnostic.switchToWirelessSettings=function(){return cordova.exec(null,null,"Diagnostic","switchToWirelessSettings",[])},Diagnostic.switchToMobileDataSettings=function(){return cordova.exec(null,null,"Diagnostic","switchToMobileDataSettings",[])},Diagnostic.isADBModeEnabled=function(successCallback,errorCallback){return cordova.exec(Diagnostic._ensureBoolean(successCallback),errorCallback,"Diagnostic","isADBModeEnabled",[])},Diagnostic.isDeviceRooted=function(successCallback,errorCallback){return cordova.exec(Diagnostic._ensureBoolean(successCallback),errorCallback,"Diagnostic","isDeviceRooted",[])},Diagnostic.restart=function(errorCallback,cold){return cordova.exec(null,errorCallback,"Diagnostic","restart",[cold])},Diagnostic.getArchitecture=function(successCallback,errorCallback){return cordova.exec(successCallback,errorCallback,"Diagnostic","getArchitecture",[])},Diagnostic.isDataRoamingEnabled=function(successCallback,errorCallback){return cordova.exec(Diagnostic._ensureBoolean(successCallback),errorCallback,"Diagnostic","isDataRoamingEnabled",[])},Diagnostic.isLocationAvailable=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isLocationAvailable.apply(this,arguments)},Diagnostic.isLocationEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isLocationEnabled.apply(this,arguments)},Diagnostic.isGpsLocationAvailable=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isGpsLocationAvailable.apply(this,arguments)},Diagnostic.isGpsLocationEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isGpsLocationEnabled.apply(this,arguments)},Diagnostic.isNetworkLocationAvailable=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isNetworkLocationAvailable.apply(this,arguments)},Diagnostic.isNetworkLocationEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isNetworkLocationEnabled.apply(this,arguments)},Diagnostic.getLocationMode=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.getLocationMode.apply(this,arguments)},Diagnostic.switchToLocationSettings=function(){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.switchToLocationSettings.apply(this,arguments)},Diagnostic.requestLocationAuthorization=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.requestLocationAuthorization.apply(this,arguments)},Diagnostic.getLocationAuthorizationStatus=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.getLocationAuthorizationStatus.apply(this,arguments)},Diagnostic.isLocationAuthorized=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.isLocationAuthorized.apply(this,arguments)},Diagnostic.registerLocationStateChangeHandler=function(successCallback){if(!cordova.plugins.diagnostic.location)throw"Diagnostic Location module is not installed";cordova.plugins.diagnostic.location.registerLocationStateChangeHandler.apply(this,arguments)},Diagnostic.isWifiAvailable=Diagnostic.isWifiEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.wifi)throw"Diagnostic Wifi module is not installed";cordova.plugins.diagnostic.wifi.isWifiAvailable.apply(this,arguments)},Diagnostic.switchToWifiSettings=function(){if(!cordova.plugins.diagnostic.wifi)throw"Diagnostic Wifi module is not installed";cordova.plugins.diagnostic.wifi.switchToWifiSettings.apply(this,arguments)},Diagnostic.setWifiState=function(successCallback,errorCallback,state){if(!cordova.plugins.diagnostic.wifi)throw"Diagnostic Wifi module is not installed";cordova.plugins.diagnostic.wifi.setWifiState.apply(this,arguments)},Diagnostic.isCameraAvailable=function(params){if(!cordova.plugins.diagnostic.camera)throw"Diagnostic Camera module is not installed";cordova.plugins.diagnostic.camera.isCameraAvailable.apply(this,arguments)},Diagnostic.isCameraPresent=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.camera)throw"Diagnostic Camera module is not installed";cordova.plugins.diagnostic.camera.isCameraPresent.apply(this,arguments)},Diagnostic.requestCameraAuthorization=function(params){if(!cordova.plugins.diagnostic.camera)throw"Diagnostic Camera module is not installed";cordova.plugins.diagnostic.camera.requestCameraAuthorization.apply(this,arguments)},Diagnostic.getCameraAuthorizationStatus=function(params){if(!cordova.plugins.diagnostic.camera)throw"Diagnostic Camera module is not installed";cordova.plugins.diagnostic.camera.getCameraAuthorizationStatus.apply(this,arguments)},Diagnostic.isCameraAuthorized=function(params){if(!cordova.plugins.diagnostic.camera)throw"Diagnostic Camera module is not installed";cordova.plugins.diagnostic.camera.isCameraAuthorized.apply(this,arguments)},Diagnostic.requestExternalStorageAuthorization=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.external_storage)throw"Diagnostic External Storage module is not installed";cordova.plugins.diagnostic.external_storage.requestExternalStorageAuthorization.apply(this,arguments)},Diagnostic.getExternalStorageAuthorizationStatus=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.external_storage)throw"Diagnostic External Storage module is not installed";cordova.plugins.diagnostic.external_storage.getExternalStorageAuthorizationStatus.apply(this,arguments)},Diagnostic.isExternalStorageAuthorized=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.external_storage)throw"Diagnostic External Storage module is not installed";cordova.plugins.diagnostic.external_storage.isExternalStorageAuthorized.apply(this,arguments)},Diagnostic.getExternalSdCardDetails=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.external_storage)throw"Diagnostic External Storage module is not installed";cordova.plugins.diagnostic.external_storage.getExternalSdCardDetails.apply(this,arguments)},Diagnostic.isBluetoothAvailable=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.isBluetoothAvailable.apply(this,arguments)},Diagnostic.isBluetoothEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.isBluetoothEnabled.apply(this,arguments)},Diagnostic.setBluetoothState=function(successCallback,errorCallback,state){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.setBluetoothState.apply(this,arguments)},Diagnostic.getBluetoothState=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.getBluetoothState.apply(this,arguments)},Diagnostic.registerBluetoothStateChangeHandler=function(successCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.registerBluetoothStateChangeHandler.apply(this,arguments)},Diagnostic.hasBluetoothSupport=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.hasBluetoothSupport.apply(this,arguments)},Diagnostic.hasBluetoothLESupport=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.hasBluetoothLESupport.apply(this,arguments)},Diagnostic.hasBluetoothLESupport=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.hasBluetoothLESupport.apply(this,arguments)},Diagnostic.hasBluetoothLEPeripheralSupport=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.hasBluetoothLEPeripheralSupport.apply(this,arguments)},Diagnostic.switchToBluetoothSettings=function(){if(!cordova.plugins.diagnostic.bluetooth)throw"Diagnostic Bluetooth module is not installed";cordova.plugins.diagnostic.bluetooth.switchToBluetoothSettings.apply(this,arguments)},Diagnostic.isRemoteNotificationsEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.notifications)throw"Diagnostic Notifications module is not installed";cordova.plugins.diagnostic.notifications.isRemoteNotificationsEnabled.apply(this,arguments)},Diagnostic.isMicrophoneAuthorized=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.microphone)throw"Diagnostic Microphone module is not installed";cordova.plugins.diagnostic.microphone.isMicrophoneAuthorized.apply(this,arguments)},Diagnostic.getMicrophoneAuthorizationStatus=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.microphone)throw"Diagnostic Microphone module is not installed";cordova.plugins.diagnostic.microphone.getMicrophoneAuthorizationStatus.apply(this,arguments)},Diagnostic.requestMicrophoneAuthorization=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.microphone)throw"Diagnostic Microphone module is not installed";cordova.plugins.diagnostic.microphone.requestMicrophoneAuthorization.apply(this,arguments)},Diagnostic.isContactsAuthorized=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.contacts)throw"Diagnostic Contacts module is not installed";cordova.plugins.diagnostic.contacts.isContactsAuthorized.apply(this,arguments)},Diagnostic.getContactsAuthorizationStatus=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.contacts)throw"Diagnostic Contacts module is not installed";cordova.plugins.diagnostic.contacts.getContactsAuthorizationStatus.apply(this,arguments)},Diagnostic.requestContactsAuthorization=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.contacts)throw"Diagnostic Contacts module is not installed";cordova.plugins.diagnostic.contacts.requestContactsAuthorization.apply(this,arguments)},Diagnostic.isCalendarAuthorized=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.calendar)throw"Diagnostic Calendar module is not installed";cordova.plugins.diagnostic.calendar.isCalendarAuthorized.apply(this,arguments)},Diagnostic.getCalendarAuthorizationStatus=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.calendar)throw"Diagnostic Calendar module is not installed";cordova.plugins.diagnostic.calendar.getCalendarAuthorizationStatus.apply(this,arguments)},Diagnostic.requestCalendarAuthorization=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.calendar)throw"Diagnostic Calendar module is not installed";cordova.plugins.diagnostic.calendar.requestCalendarAuthorization.apply(this,arguments)},Diagnostic.isNFCPresent=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.nfc)throw"Diagnostic NFC module is not installed";cordova.plugins.diagnostic.nfc.isNFCPresent.apply(this,arguments)},Diagnostic.isNFCEnabled=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.nfc)throw"Diagnostic NFC module is not installed";cordova.plugins.diagnostic.nfc.isNFCEnabled.apply(this,arguments)},Diagnostic.isNFCAvailable=function(successCallback,errorCallback){if(!cordova.plugins.diagnostic.nfc)throw"Diagnostic NFC module is not installed";cordova.plugins.diagnostic.nfc.isNFCAvailable.apply(this,arguments)},Diagnostic.registerNFCStateChangeHandler=function(successCallback){if(!cordova.plugins.diagnostic.nfc)throw"Diagnostic NFC module is not installed";cordova.plugins.diagnostic.nfc.registerNFCStateChangeHandler.apply(this,arguments)},Diagnostic.switchToNFCSettings=function(){if(!cordova.plugins.diagnostic.nfc)throw"Diagnostic NFC module is not installed";cordova.plugins.diagnostic.nfc.switchToNFCSettings.apply(this,arguments)},Diagnostic}});